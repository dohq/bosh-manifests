---
anchors:
  openstack_env: &openstack_env
    OS_PROJECT_DOMAIN_NAME: ((os_project_domain_name))
    OS_USER_DOMAIN_NAME: ((os_user_domain_name))
    OS_PROJECT_NAME: ((os_project_name))
    OS_TENANT_NAME: ((os_tenant_name))
    OS_USERNAME: ((os_username))
    OS_PASSWORD: ((os_password))
    OS_AUTH_URL: ((os_auth_url))
    OS_INTERFACE: ((os_interface))
    OS_IDENTITY_API_VERSION: ((os_identity_api_version))
    OS_REGION_NAME: ((os_region_name))
    OS_AUTH_PLUGIN: ((os_auth_plugin))
  docker_bosh_env: &docker_bosh_env
    platform: linux
    image_resource:
      type: registry-image
      source:
        repository: dohq/bosh-env
        tag: 6.1.1
  s3_secret: &s3_secret
    access_key_id: ((aws_access_key))
    secret_access_key: ((aws_secret_key))
    region_name: ((aws_region))
  slack_notify: &slack_notify
    on_success:
      put: notify
      params:
        alert_type: success
    on_failure:
      put: notify
      params:
        alert_type: failed


resource_types:
- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource

resources:
- name: notify
  type: slack-alert
  icon: slack
  source:
    url: ((slack_webhook))
- name: template
  type: git
  icon: github-face
  source:
    uri: https://github.com/dohq/bosh-manifests
    branch: master
- name: bosh-deployment
  type: git
  icon: github-face
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master
    commit_filter:
      include:
      - "Bumping bosh to*"
- name: bosh-creds
  type: s3
  icon: numeric-3-box
  source:
    <<: *s3_secret
    bucket: ((bosh_creds_bucket))
    versioned_file: bosh-creds.yml
    initial_version: 0.0.0
- name: bosh-state
  type: s3
  icon: numeric-3-box
  source:
    <<: *s3_secret
    bucket: ((bosh_creds_bucket))
    versioned_file: bosh-state.json
    initial_version: 0.0.0
    initial_content_text: "{}"

groups:
- name: build
  jobs:
  - deploy-bosh
  - upload-stemcell
  - update-cloud-config
- name: cleanup
  jobs:
  - destroy-bosh


jobs:
- name: deploy-bosh
  serial: true
  plan:
  - in_parallel:
    - get: bosh-deployment
      trigger: true
    - get: template
    - get: bosh-creds
    - get: bosh-state
  - put: notify
    params:
      alert_type: start
  - task: deploy-bosh
    file: template/ci/tasks/deploy-bosh.yml
    params:
      <<: *openstack_env
      AWS_ACCESS_KEY: ((aws_access_key))
      AWS_SECRET_KEY: ((aws_secret_key))
      AWS_REGION: ((aws_region))
      BOSH_PEM: ((bosh_pem.private_key))
    ensure:
      in_parallel:
      - put: bosh-state
        params:
          file: out/bosh-state.json
      - put: bosh-creds
        params:
          file: out/bosh-creds.yml
  <<: *slack_notify

- name: upload-stemcell
  serial: true
  plan:
  - in_parallel:
    - get: bosh-deployment
      passed:
      - deploy-bosh
      trigger: true
    - get: template
    - get: bosh-creds
    - get: bosh-state
  - put: notify
    params:
      alert_type: start
  - task: upload-stemcell
    file: template/ci/tasks/upload-stemcell.yml
    params:
      AWS_ACCESS_KEY: ((aws_access_key))
      AWS_SECRET_KEY: ((aws_secret_key))
      AWS_REGION: ((aws_region))
      BOSH_NON_INTERACTIVE: yes
  <<: *slack_notify

- name: update-cloud-config
  serial: true
  plan:
  - in_parallel:
    - get: bosh-deployment
      passed:
      - upload-stemcell
      trigger: true
    - get: template
    - get: bosh-creds
  - put: notify
    params:
      alert_type: start
  - task: update-cloud-config
    file: template/ci/task/update-cloud-config.yml
    params:
      AWS_ACCESS_KEY: ((aws_access_key))
      AWS_SECRET_KEY: ((aws_secret_key))
      AWS_REGION: ((aws_region))
      BOSH_NON_INTERACTIVE: yes
  <<: *slack_notify

- name: destroy-bosh
  serial: true
  plan:
  - in_parallel:
    - get: template
    - get: bosh-creds
    - get: bosh-state
  - put: notify
    params:
      alert_type: start
  - task: destroy-bosh
    file: template/ci/task/destroy-bosh.yml
    params:
      <<: *openstack_env
      AWS_ACCESS_KEY: ((aws_access_key))
      AWS_SECRET_KEY: ((aws_secret_key))
      AWS_REGION: ((aws_region))
      BOSH_PEM: ((bosh_pem.private_key))
    ensure:
      in_parallel:
      - put: bosh-state
        params:
          file: out/bosh-state.json
      - put: bosh-creds
        params:
          file: out/bosh-creds.yml
  <<: *slack_notify
